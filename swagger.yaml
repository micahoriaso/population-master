swagger: '2.0'
info:
  title: Population Master API Specification
  description: >-
    The official API documentation for population-master. You will need to have a running instance of the [population-master](https://github.com/micahoriaso/population-master) to test these API endpoints on your local environment. For this sample, you can use **email**:`jared@gmail.com` and **password**: `123456789` to login. When adding auth header, click on the authorize button then add the authentication header in this format `Bearer JWT-token`
  version: 1.0.0
basePath: /
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Performs user registration
      description: 'Performs user registration'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: message
          description: Registration parameters
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: Micah
              email:
                type: string
                example: 'brock@gmail.com'
              password:
                type: string
                example: '123456789'
      responses:
        '201':
          description: CREATED
      security:
  /auth/login:
    post:
      tags:
        - Auth
      summary: Performs user login
      description: 'Performs user login'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: message
          description: Login parameters
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                example: 'brock@gmail.com'
              password:
                type: string
                example: '123456789'
      responses:
        '200':
          description: OK
      security:

  /locations:
    get:
      security:
        - Bearer: []
      tags:
        - Locations
      summary: List all locations
      description: List all locations
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
    post:
      security:
        - Bearer: []
      tags:
        - Locations
      summary: Create a location
      description: Create a location
      produces:
        - application/json
      parameters:
        - in: body
          name: message
          description: Location details
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: 'Rhur'
              male:
                type: number
                example: 124
              female:
                type: number
                example: 320
              parentId:
                type: string
                example: '5d270be1fc009b80a4c8c4b5'
      responses:
        '201':
          description: CREATED
        '401':
          description: Unauthorized
  /locations/{id}:
    put:
      security:
        - Bearer: []
      tags:
        - Locations
      summary: Update a location
      description: Update a location
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the location
          required: true
          schema:
            type: string
        - in: body
          name: message
          description: Location details
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: 'Piks'
              male:
                type: number
                example: 800
              female:
                type: number
                example: 320
              parentId:
                type: string
                example: '5d270be1fc009b80a4c8c4b5'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Location does not exist
    get:
      security:
        - Bearer: []
      tags:
        - Locations
      summary: Get location details
      description: Get location details
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the location
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Location does not exist
    delete:
      security:
        - Bearer: []
      tags:
        - Locations
      summary: Delete a location
      description: Delete a location
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the location
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Location does not exist

externalDocs:
  description: Find out more about Population master
  url: 'https://github.com/micahoriaso/population-master'
